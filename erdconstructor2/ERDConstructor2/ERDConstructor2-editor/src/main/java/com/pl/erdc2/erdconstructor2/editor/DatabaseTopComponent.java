/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pl.erdc2.erdconstructor2.editor;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import com.pl.erdc2.erdconstructor2.api.FileChangesManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.pl.erdc2.erdconstructor2.editor//Database//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "databaseTopComponent",
        iconBase = "com/pl/erdc2/erdconstructor2/editor/relationschemaIcon.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "com.pl.erdc2.erdconstructor2.editor.DatabaseTopComponent")
@ActionReference(path = "Menu/Window" , position = 3)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DatabaseAction",
        preferredID = "databaseTopComponent"
)
@Messages({
    "CTL_DatabaseAction=Database",
    "CTL_DatabaseTopComponent=Database Window",
    "HINT_DatabaseTopComponent=This is a Database window"
})
public final class DatabaseTopComponent extends TopComponent {

    public DatabaseTopComponent() {
        initComponents();
        setName(Bundle.CTL_DatabaseTopComponent());
        setToolTipText(Bundle.HINT_DatabaseTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        databaseSchemaLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        databaseSchemaTextArea = new javax.swing.JTextArea();

        org.openide.awt.Mnemonics.setLocalizedText(databaseSchemaLabel, org.openide.util.NbBundle.getMessage(DatabaseTopComponent.class, "DatabaseTopComponent.databaseSchemaLabel.text")); // NOI18N

        databaseSchemaTextArea.setColumns(20);
        databaseSchemaTextArea.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        databaseSchemaTextArea.setLineWrap(true);
        databaseSchemaTextArea.setRows(5);
        jScrollPane1.setViewportView(databaseSchemaTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(databaseSchemaLabel)
                        .addGap(0, 225, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databaseSchemaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel databaseSchemaLabel;
    private javax.swing.JTextArea databaseSchemaTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        databaseSchemaTextArea.setLineWrap(true);
        databaseSchemaTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
               FileChangesManager.change();
            }
            @Override
            public void removeUpdate(DocumentEvent de) {
               FileChangesManager.change();
            }
            @Override
            public void changedUpdate(DocumentEvent de) {
               FileChangesManager.change();
            }
        });
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
    public String getDatabaseSchema() {
        return databaseSchemaTextArea.getText();
    }
    
    public void setDatabaseSchema(String databaseSchema) {
        databaseSchemaTextArea.setText(databaseSchema);
    }
}
