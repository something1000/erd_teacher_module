/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pl.erdc2.erdconstructor2.editor;

import com.pl.erdc2.globalsettings.UserInfoPanel;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.NbPreferences;
import com.pl.erdc2.erdconstructor2.api.FileChangesManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.pl.erdc2.erdconstructor2.editor//Description//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "descriptionTopComponent",
        iconBase = "com/pl/erdc2/erdconstructor2/editor/descriptionIcon.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "com.pl.erdc2.erdconstructor2.editor.DescriptionTopComponent")
@ActionReference(path = "Menu/Window" , position = 2 )
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DescriptionAction",
        preferredID = "descriptionTopComponent"
)
@Messages({
    "CTL_DescriptionAction=Description",
    "CTL_DescriptionTopComponent=Description Window",
    "HINT_DescriptionTopComponent=This is a Description window"
})
public final class DescriptionTopComponent extends TopComponent {

    public DescriptionTopComponent() {
        initComponents();
        setName(Bundle.CTL_DescriptionTopComponent());
        setToolTipText(Bundle.HINT_DescriptionTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameTextField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        indexNoLabel = new javax.swing.JLabel();
        groupIDLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        indexNoTextField = new javax.swing.JTextField();
        groupIDTextField = new javax.swing.JTextField();
        subjectLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectTextArea = new javax.swing.JTextArea();
        descriptionLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        detailDescriptionLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        detailDescriptionTextArea = new javax.swing.JTextArea();
        termLabel = new javax.swing.JLabel();
        termCodeField = new javax.swing.JTextField();

        firstNameTextField.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(firstNameLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.firstNameLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lastNameLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.lastNameLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(indexNoLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.indexNoLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(groupIDLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.groupIDLabel.text")); // NOI18N

        lastNameTextField.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        indexNoTextField.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        groupIDTextField.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(subjectLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.subjectLabel.text")); // NOI18N

        subjectTextArea.setColumns(20);
        subjectTextArea.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        subjectTextArea.setLineWrap(true);
        subjectTextArea.setRows(5);
        subjectTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(subjectTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(descriptionLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.descriptionLabel.text")); // NOI18N

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(descriptionTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(detailDescriptionLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.detailDescriptionLabel.text")); // NOI18N

        detailDescriptionTextArea.setColumns(20);
        detailDescriptionTextArea.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        detailDescriptionTextArea.setLineWrap(true);
        detailDescriptionTextArea.setRows(5);
        detailDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(detailDescriptionTextArea);

        termLabel.setLabelFor(termCodeField);
        org.openide.awt.Mnemonics.setLocalizedText(termLabel, org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.termLabel.text")); // NOI18N
        termLabel.setToolTipText(org.openide.util.NbBundle.getMessage(DescriptionTopComponent.class, "DescriptionTopComponent.termLabel.toolTipText")); // NOI18N

        termCodeField.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(indexNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(indexNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                            .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(groupIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(groupIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(184, 184, 184))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(termLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(termCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(subjectLabel)
                            .addComponent(descriptionLabel)
                            .addComponent(detailDescriptionLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLabel)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(termLabel)
                                .addComponent(termCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(groupIDLabel)
                            .addComponent(groupIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(indexNoLabel)
                    .addComponent(indexNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(subjectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(descriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(detailDescriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel detailDescriptionLabel;
    private javax.swing.JTextArea detailDescriptionTextArea;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel groupIDLabel;
    private javax.swing.JTextField groupIDTextField;
    private javax.swing.JLabel indexNoLabel;
    private javax.swing.JTextField indexNoTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JTextArea subjectTextArea;
    private javax.swing.JTextField termCodeField;
    private javax.swing.JLabel termLabel;
    // End of variables declaration//GEN-END:variables

    private Preferences pref = NbPreferences.forModule(UserInfoPanel.class);
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        subjectTextArea.setLineWrap(true);
        descriptionTextArea.setLineWrap(true);
        detailDescriptionTextArea.setLineWrap(true);

        firstNameTextField.setText(pref.get("firstNamePreference", ""));
        lastNameTextField.setText(pref.get("lastNamePreference", ""));
        indexNoTextField.setText(pref.get("indexNoPreference", ""));
        groupIDTextField.setText(pref.get("groupIDPreference", ""));
        termCodeField.setText(pref.get("termPreference", ""));
        //emailTextField.setText(pref.get("emailPreference", ""));

        firstNameTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeFirstName();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changeFirstName();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                changeFirstName();
            }
        });

        lastNameTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeLastName();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changeLastName();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                changeLastName();
            }
        });

        indexNoTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeIndexNo();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changeIndexNo();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                changeIndexNo();
            }
        });

        groupIDTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeGroupID();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changeGroupID();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                changeGroupID();
            }
        });

        termCodeField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeTerm();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                changeTerm();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                changeTerm();
            }
        });

//        emailTextField.getDocument().addDocumentListener(new DocumentListener() {
//            @Override
//            public void insertUpdate(DocumentEvent e) {
//                changeEmail();
//            }
//            @Override
//            public void removeUpdate(DocumentEvent e) {
//                changeEmail();
//            }
//            @Override
//            public void changedUpdate(DocumentEvent e){
//                changeEmail();
//            }
//        });

        subjectTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                FileChangesManager.change();
            }
        });

        descriptionTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                FileChangesManager.change();
            }
        });

       detailDescriptionTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                FileChangesManager.change();
            }
            @Override
            public void changedUpdate(DocumentEvent e){
                FileChangesManager.change();
            }
        });
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public String getSubject() {
        return subjectTextArea.getText();
    }
    
    public void setSubject(String subject) {
        subjectTextArea.setText(subject);
    }

    public String getDescription() {
        return descriptionTextArea.getText();
    }

    public void setDescription(String description) {
        descriptionTextArea.setText(description);
    }

    public String getDetailDescription() {
        return detailDescriptionTextArea.getText();
    }

    public void setDetailDescription(String detailDescription) {
        detailDescriptionTextArea.setText(detailDescription);
    }

    public void changeFirstName() {
        pref.put("firstNamePreference", firstNameTextField.getText());
    }

    public void changeLastName() {
        pref.put("lastNamePreference", lastNameTextField.getText());
    }

    public void changeIndexNo() {
        pref.put("indexNoPreference", indexNoTextField.getText());
    }

    public void changeGroupID() {
        pref.put("groupIDPreference", groupIDTextField.getText());
    }

//    public void changeEmail() {
//        pref.put("emailPreference", emailTextField.getText());
//    }

    public void changeTerm(){
        pref.put("termPreference", termCodeField.getText());
    }
}